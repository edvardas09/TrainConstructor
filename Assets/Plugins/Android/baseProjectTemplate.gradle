def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if(keystorePropertiesFile.exists())
{
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

allprojects {
    buildscript {
        repositories {**ARTIFACTORYREPOSITORY**
            google()
            mavenCentral()
            
                // Repositories start
                // Repositories end
        }

        dependencies {
            // Dependencies start
            // Dependencies end
            classpath 'com.android.tools.build:gradle:3.6.0'
            
            **BUILD_SCRIPT_DEPS**
        }
    }

    repositories {**ARTIFACTORYREPOSITORY**
        **PLAYWIREREPOSITORY**
        google()
        mavenCentral()
        maven { url "https://maven.singular.net/"}
        maven { url "https://android-sdk.is.com/" }
        maven { url "https://www.jitpack.io" }
        maven { url 'https://artifact.bytedance.com/repository/pangle'}
        maven { url 'https://repo.brightcove.com/releases' } // SpotX repo
        maven { url 'https://android-sdk.aatkit.com/maven' } // AddApptr repo
        maven { url 'https://verve.jfrog.io/artifactory/verve-gradle-release' } //PubNative repository
        maven { url "https://aa-sdk.s3-eu-west-1.amazonaws.com/android_repo/" } // SuperAwesome repo
        maven { url "https://plugins.gradle.org/m2/" } // New super awesome repo
        maven { url "https://developer.huawei.com/repo/"}
        maven { url 'https://unity3ddist.jfrog.io/artifactory/unity-mediation-mvn-prod-local/'}  
            
        flatDir { dirs "${project(':unityLibrary').projectDir}/libs" }
    }
    
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
